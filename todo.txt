Comments
-----------------

1. (07/05/2018 14:23): App has self-initialization completely added
2. (07/05/2018 17:59): App v1.1 is under development, the newer things that is added on the newer version from
application is that now the application has not more "raw console", but an unique frame that will help on the display
functions from the application commands
    2.1. App v1.1 make fixes on bugs about commands that can not run UTF-8 characters in "raw console"
    2.2. App v1.1 has a new console design
        -> Why this change from consoles design? Like that the actual console that is "raw console" can not function
        about some commands from app the app receives a new console design, this also is a future thinking about the
        new commands that can be added
3. (08/05/2018 16:32): The all reformateds/recodeds methods from the Application v1.1, take this updates to turn the
internal more safe
4. CHANGE VERSION (12/05/2018 11:13) (from v1.0, to v1.1): This version takes a new design of the console, this is used because to adapt the
app to can create more commands, bugs that are occurs on the old design console is that the UTF-8 can not be parsed,
but now the application makes the configuration to use the UTF-8, doing that the design from the console is general
5. Application version has been updated to "v1.1.2", this version fix the bugs from "v1.1"

More Future Functions
-----------------
ADD (30/04/2018 13:31): Support to other Operational Systems like MAC and Linux, only now the Application Manager only
support Windows OS that represents the Main Operational System that the Application is developed
    -> STARTED (01/05/2018 21:56)

Functions
-----------------
ADD (v1.1) (08/05/2018 20:13): Makes a configuration to the console size

ADD (07/05/2018 22:19): Add a log information folder, this helps to identify errors and bugs

Fixed Bugs & Changes
-----------------

ADDED (13/05/2018 11:34): "editfile" command has been re-added, with a new console design, to create a more productivity
on edit a file this command creates a console to edit the file

ADDED (13/05/2018 10:50) (v1.1) REPORTED (09/05/2018 18:16): Makes the new model from the "dir" command, when the new console is implemented the
first model to adapt now to the console to adjust the commands use the MS-DOS Directory Model Command then, on the next
version the model will be updated

FIXED (13/05/2018 10:49) (v1.1) REPORTED (07/05/2018 17:57): A bug that occurs with JTextArea that the JScrollPane is not scrolling the text

FIXED (13/05/2018 10:49) REPORTED (30/04/2018 12:22): The "dir" command to print the informations about files and
directories, the problem that occurs to make this is that the files that contains big length get out
of columns
    -> Solution: Change the model of print from "dir" command, the model that is applied on "dir" command is from
    MS-DOS that show informations about the files and directories, but to create a better concept of application making
    the model from application

ADDED (09/05/2018 18:11): A new flag "-in" has been added, this flag makes that the information produces by the command
is displayed on the input

ADDED (09/05/2018 18:11): "clear" command has been added on the "help" command

REMOVED (09/05/2018 17:57): "editfile" command has been removed

REFORMAT (08/05/2018 16:32): "runOsCommand" method has been reformated

ADD (07/05/2018 21:21): "write" method has been added

REFORMAT (07/05/2018 21:20): "read" method has been reformated

COMMENT (07/05/2018 20:54): Is not more necessary the use from batchs files to execute the programs and the storage that
save the batch files is removed, also this contribute to the future add support to other operational systems yet not
tested

CANCELLED (07/05/2018 20:38) ADD (30/04/2018 13:26): Add a help to each command
    -> Why? The "help" command already shows the informations about each command

FIXED (07/05/2018 20:37) REPORTED (01/05/2018 20:46): A bug that occurs of testing out of IDE using Command Prompt from Windows, the Application
Manager can not read UTF-8 characters making the "mkfile", "mkdir" that are commands fail

CANCELLED (07/05/2018 20:37) CORRECTION (30/04/2018 10:54): Correction that ExecutorService creates an instance each time that command
"editfile" is called, this way is used to fix a bug that happen to insert editable line that represents the content
from file, ExecutorService creates a new single threaded pool then the ExecutorService can be a static final variable
(constant)
    -> Why? The cancel from this correction is because this correction is not more need, this correction is fixed by
    the implementation from the new console design

ADDED (07/05/2018 20:32): A "echo" command has been added, this command prints a custom message to the console output

REFORMAT (07/05/2018 19:36): App v1.1 has not more work with "parseCommand" method recursively, this create more
stability to the application

REFORMAT (07/05/2018 19:28): "error" method from App v1.0 has name changed to "errorf"

REFORMAT (07/05/2018 19:10): "printf" method on the App v1.1 has been reformed

CANCELLED (07/05/2018 14:21) ADD (01/05/2018 20:45): Support to an installer
    -> Why? The application not need more has support to an installer, because now the application has the
    self initialization and this make the configurations files and storage

FIXED (07/05/2018 14:20) REPORTED (06/05/2018 11:06): A bug that occurs to self-initialization from App

FIXED (06/05/2018 10:25) REPORTED (06/05/2018 10:16): A bug that occurs when start the applications the storage is not initialized making errors
when usage commands that need from storage to register contents

FIXED (02/05/2018 15:53) REPORTED (01/05/2018 21:57): Make that the common processes that are make by operational system types run commands in the
same command without make that the OS need support the command to run, but the command name need be changed to make a
command process name commonly about operational system types that the application supports, then the OS that not
contains the command process need be check
    -> Solution: Commands that need support by multiples operational systems by checking is not the better way to do
    for application, because each OS has command control making the addition from support of multiples OS unecessary

REMOVED (02/05/2018 15:52) REPORTED (02/05/2018 15:51): Commands "taskkill" and "tasklist" are removed from addition
in application

FIXED (01/05/2018 21:16) REPORTED (01/05/2018 21:00): A bug with "dir" command in navigate by folders using file index, when the file index can not
be found the Application not report this and the application is closed
    -> This error is caused because the catch from the error from file index not found is wrong

FIXED (01/05/2018 20:50) REPORTED (01/05/2018 20:49): A bug that occurs when register key that when write the path from the application in batch file
the path not contains the "" to can represents the path, and without this the path is not start correctly

ADDED (30/04/2018 13:34) REPORTED (30/04/2018 12:31): Add "clear" command, that makes the clear from screen

ADDED (30/04/2018 13:24) REPORTED (30/04/2018 12:28): Add in "dir" command the varargs of file index like "10, 32" that choose on the first file path
the 10 index and in the file path that is searched select 32 index, making the easily navigation between paths and fix
bug that occurs that when choose the path by file index how navigate to next path

CANCELLED FIX (30/04/2018) REPORTED (30/04/2018 11:02): Fix a bug that occurs out of IDE testing that the console output printing characters
that are not UNICODE characters "UTF-8"
    -> Solution:
        1. Makes a PrintStream instance "new PrintStream(System.out, true, utf8Charset.name())", that makes that
        the printing console output characters is "UTF-8"
    -> Why Cancel?:
        System.out already has default charset

FIXED (30/04/2018 12:21) REPORTED (30/04/2018 11:25): Fix a bug about "dir" command that can not print correctly UNICODE characters
    -> Solution:
        1. To bypass this the command "dir" has a new command argument that can be by index from file and now the directory
        can be access by the file index

FIXED (30/04/2018 11:24) REPORTED (28/04/2018 23:31): Fix a bug about "dir" command in console that not parse UNICODE characters,
on IDE testing the console input reads "UTF-8" but out no read "UTF-8"
    -> Solution:
        1. Make the Scanner makes instance about "new Scanner(new InputStreamReader(System.in, "UTF-8"))", but
        this makes the Scanner not more static final variable (constant)

FIXED (28/04/2018 22:16): A bug about insert editable line
    -> Solution: Is used ExecutorService to make async operations
    -> !!!! If the bug can not be resolved then command "editfile" must be removed !!!!